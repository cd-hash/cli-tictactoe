; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
#'tictactoe.square/upper-bound
clj꞉tictactoe.square꞉> 
; Evaluating file: square.clj
#'tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> 
(range upper-bound)
(0 1 2)
clj꞉tictactoe.square꞉> 
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
(create-new-square)
; Execution error (ArityException) at tictactoe.square/eval7663 (REPL:31).
; Wrong number of args (0) passed to: tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> (tictactoe.square/create-new-square)
; Execution error (ArityException) at tictactoe.square/eval7665 (REPL:34).
; Wrong number of args (0) passed to: tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> 
(for [row (range upper-bound)
      col (range upper-bound)]
  [row col])
([0 0] [0 1] [0 2] [1 0] [1 1] [1 2] [2 0] [2 1] [2 2])
clj꞉tictactoe.square꞉> 
(create-new-square)
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
(create-new-square)
; Execution error (ArityException) at tictactoe.square/eval7718 (REPL:46).
; Wrong number of args (0) passed to: tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> 
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
(create-new-square)
; Execution error (ArityException) at tictactoe.square/eval7745 (REPL:52).
; Wrong number of args (0) passed to: tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> 
(create-new-square )
; Execution error (ArityException) at tictactoe.square/eval7747 (REPL:56).
; Wrong number of args (0) passed to: tictactoe.square/create-new-square
clj꞉tictactoe.square꞉> 
; Evaluating file: square.clj
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
(create-new-square 1 2)
{:row 1, :col 2}
clj꞉tictactoe.square꞉> 
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
([0 0] [0 1] [0 2] [1 0] [1 1] [1 2] [2 0] [2 1] [2 2])
clj꞉tictactoe.square꞉> 
(create-squares)
([0 0] [0 1] [0 2] [1 0] [1 1] [1 2] [2 0] [2 1] [2 2])
clj꞉tictactoe.square꞉> 
#'tictactoe.square/create-board
clj꞉tictactoe.square꞉> 11
({[0 0] :empty}
 {[0 1] :empty}
 {[0 2] :empty}
 {[1 0] :empty}
 {[1 1] :empty}
 {[1 2] :empty}
 {[2 0] :empty}
 {[2 1] :empty}
 {[2 2] :empty})
clj꞉tictactoe.square꞉> 
; Evaluating file: core.clj
#'tictactoe.core/check-player
clj꞉tictactoe.core꞉> 
(let [player :x]
  (case player
    :x :x
    :o :o
    nil))
:x
clj꞉tictactoe.core꞉> 
(let [player :o]
  (case player
    :x :x
    :o :o
    nil))
:o
clj꞉tictactoe.core꞉> 
(let [player :y]
  (case player
    :x :x
    :o :o
    nil))
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.square/create-squares
clj꞉tictactoe.square꞉> 
; Evaluating file: square.clj
nil
clj꞉tictactoe.square꞉> 
({:row 0, :col 0}
 {:row 0, :col 1}
 {:row 0, :col 2}
 {:row 1, :col 0}
 {:row 1, :col 1}
 {:row 1, :col 2}
 {:row 2, :col 0}
 {:row 2, :col 1}
 {:row 2, :col 2})
clj꞉tictactoe.square꞉> 
({{:row 0, :col 0} :empty}
 {{:row 0, :col 1} :empty}
 {{:row 0, :col 2} :empty}
 {{:row 1, :col 0} :empty}
 {{:row 1, :col 1} :empty}
 {{:row 1, :col 2} :empty}
 {{:row 2, :col 0} :empty}
 {{:row 2, :col 1} :empty}
 {{:row 2, :col 2} :empty})
clj꞉tictactoe.square꞉> 
; Evaluating file: square.clj
nil
clj꞉tictactoe.square꞉> 
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
#'tictactoe.square/board
clj꞉tictactoe.square꞉> 
(get board {:row 0 :col 0})
:empty
clj꞉tictactoe.square꞉> 
(assoc board {:row 0 :col 0} :x)
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :x,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
({:row 0 :col 0} board)
nil
clj꞉tictactoe.square꞉> 
(get board {:row 0 :col 0})
:empty
clj꞉tictactoe.square꞉> 
(board)
; Execution error (ArityException) at tictactoe.square/eval8029 (REPL:169).
; Wrong number of args (0) passed to: clojure.lang.PersistentHashMap
clj꞉tictactoe.square꞉> 
; Evaluating file: square.clj
nil
clj꞉tictactoe.square꞉> 
(get board {:row 0 :col 0})
:empty
clj꞉tictactoe.square꞉> 
(assoc! board {:row 0 :col 0} :x)
; Execution error (ClassCastException) at tictactoe.square/eval8090 (REPL:179).
; class clojure.lang.PersistentHashMap cannot be cast to class clojure.lang.ITransientAssociative (clojure.lang.PersistentHashMap and clojure.lang.ITransientAssociative are in unnamed module of loader 'app')
clj꞉tictactoe.square꞉> 
(let board (assoc board {:row 0 :col 0} :x))
; Syntax error macroexpanding clojure.core/let at (.calva/output-window/output.calva-repl:183:1).
; board - failed: vector? at: [:bindings] spec: :clojure.core.specs.alpha/bindings
clj꞉tictactoe.square꞉> 
(def updated-board (assoc board {:row 0 :col 0} :x))
#'tictactoe.square/updated-board
clj꞉tictactoe.square꞉> 
updated-board
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :x,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
nil
clj꞉tictactoe.square꞉> 
#'tictactoe.square/board
clj꞉tictactoe.square꞉> 
#'tictactoe.square/board
clj꞉tictactoe.square꞉> 
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :x,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
#'tictactoe.square/board
clj꞉tictactoe.square꞉> 
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :x,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :o,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
#'tictactoe.square/board
clj꞉tictactoe.square꞉> 
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :x,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :x,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :o,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.square꞉> 
