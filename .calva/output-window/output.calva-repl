; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; No nrepl port file found.
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: square.clj
nil
clj꞉tictactoe.square꞉> 
; Syntax error compiling at (src/tictactoe/core.clj:12:14).
; No such namespace: square
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
board
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
(get board {:row 1 :col 1})
:empty
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
; Syntax error compiling at (src/tictactoe/core.clj:17:14).
; Unable to resolve symbol: place-piece in this context
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :x,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
nil
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :x,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :x,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :x,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
nil
clj꞉tictactoe.core꞉> 
nil
clj꞉tictactoe.core꞉> 
:error
clj꞉tictactoe.core꞉> 
(def my-map {:a 1})
#'tictactoe.core/my-map
clj꞉tictactoe.core꞉> 
(assoc my-map :b 2)
{:a 1, :b 2}
clj꞉tictactoe.core꞉> 
; Evaluating file: core.clj
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
board
nil
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :empty,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
nil
clj꞉tictactoe.core꞉> 
(if-some [player (check-player :x)]
  player
  :error)
:x
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
#'tictactoe.core/board
clj꞉tictactoe.core꞉> 
{{:row 1, :col 1} :x,
 {:row 0, :col 2} :empty,
 {:row 2, :col 2} :empty,
 {:row 0, :col 1} :empty,
 {:row 0, :col 0} :empty,
 {:row 2, :col 1} :empty,
 {:row 1, :col 0} :empty,
 {:row 2, :col 0} :empty,
 {:row 1, :col 2} :empty}
clj꞉tictactoe.core꞉> 
